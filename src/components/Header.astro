---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
---

<header class="bg-white dark:bg-gray-800 shadow-md p-4">
  <nav class="flex flex-wrap items-center justify-between max-w-6xl mx-auto">
    <div class="flex items-center space-x-2">
      <img src="/logo.svg" alt="Logo" class="w-8 h-8" />
      <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100">
        <a href="/">{SITE_TITLE}</a>
      </h2>
    </div>
    <div
      id="menu"
      class="hidden z-10 md:flex flex-auto flex-col justify-between md:flex-row space-y-4 md:space-y-0 md:space-x-4 absolute md:relative top-16 md:top-auto left-0 md:left-auto bg-white dark:bg-gray-800 md:bg-transparent md:dark:bg-transparent w-full md:w-auto shadow-md md:shadow-none p-4 md:p-0"
    >
      <div class="flex space-x-4 md:ml-auto">
        <ul class="inline header-menu">
          <li>
            <HeaderLink
              class={"hover:text-brandingColor hover:underline"}
              href="/">Home</HeaderLink
            >
          </li>
          <li>
            <HeaderLink
              class={"hover:text-brandingColor hover:underline"}
              href="/blog">Blog</HeaderLink
            >
          </li>
          <li>
            <HeaderLink
              class={"hover:text-brandingColor hover:underline"}
              href="/work">Work</HeaderLink
            >
          </li>
          <li>
            <HeaderLink
              class={"hover:text-brandingColor hover:underline"}
              href="/projects">Projects</HeaderLink
            >
          </li>
          <li>
            <HeaderLink
              class={"hover:text-brandingColor hover:underline"}
              href="/about">About</HeaderLink
            >
          </li>
        </ul>
      </div>

      <div class="flex space-x-3 social-icons">
        <button
          id="dark-mode-toggle"
          class="text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-gray-100"
          aria-label="Toggle dark mode"
        >
          <svg id="sun-icon" viewBox="0 0 24 24" aria-hidden="true" width="24" height="24" class="hidden dark:block">
            <path fill="currentColor" d="M12 18C8.68629 18 6 15.3137 6 12C6 8.68629 8.68629 6 12 6C15.3137 6 18 8.68629 18 12C18 15.3137 15.3137 18 12 18ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16ZM11 1H13V4H11V1ZM11 20H13V23H11V20ZM3.51472 4.92893L4.92893 3.51472L7.05025 5.63604L5.63604 7.05025L3.51472 4.92893ZM16.9497 18.364L18.364 16.9497L20.4853 19.0711L19.0711 20.4853L16.9497 18.364ZM19.0711 3.51472L20.4853 4.92893L18.364 7.05025L16.9497 5.63604L19.0711 3.51472ZM5.63604 16.9497L7.05025 18.364L4.92893 20.4853L3.51472 19.0711L5.63604 16.9497ZM23 11V13H20V11H23ZM4 11V13H1V11H4Z"></path>
          </svg>
          <svg id="moon-icon" viewBox="0 0 24 24" aria-hidden="true" width="24" height="24" class="block dark:hidden">
            <path fill="currentColor" d="M10 7C10 10.866 13.134 14 17 14C18.9584 14 20.729 13.1957 21.9995 11.8995C22 11.933 22 11.9665 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C12.0335 2 12.067 2 12.1005 2.00049C10.8043 3.27098 10 5.04157 10 7ZM4 12C4 16.4183 7.58172 20 12 20C15.0583 20 17.7158 18.2839 19.062 15.7621C18.3945 15.9187 17.7035 16 17 16C12.0294 16 8 11.9706 8 7C8 6.29648 8.08133 5.60547 8.2379 4.938C5.71611 6.28423 4 8.9417 4 12Z"></path>
          </svg>
        </button>
        <a
          href="https://twitter.com/soikat"
          target="_blank"
          class="text-gray-700 hover:text-blue-500 dark:text-gray-300 dark:hover:text-blue-400"
        >
          <span class="sr-only">Follow Soikat on X</span>
          <svg viewBox="0 0 24 24" aria-hidden="true" width="24" height="24"
            ><g
              ><path
                d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
              ></path></g
            ></svg
          >
        </a>
        <a
          href="https://github.com/azs06"
          target="_blank"
          class="text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-gray-100"
        >
          <span class="sr-only">Go to GitHub</span>
          <svg viewBox="0 0 16 16" aria-hidden="true" width="24" height="24">
            <path
              fill="currentColor"
              d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"
            ></path>
          </svg>
        </a>
      </div>
    </div>
    <button id="menu-toggle" class="md:hidden text-gray-700 dark:text-gray-300"> â˜° </button>
  </nav>
</header>

<style>
  @media screen and (min-width: 768px) {
    .header-menu li {
      display: inline;
    }
    .social-icons {
      margin-left: auto !important;
    }
  }
  .header-menu li {
    padding: 0.5em;
  }
</style>
<script>
  const menuToggle = document.getElementById("menu-toggle");
  const menu = document.getElementById("menu");
  
  if (menuToggle && menu) {
    menuToggle.addEventListener("click", function () {
      menu.classList.toggle("hidden");
    });
  }

  // Dark mode toggle functionality
  const darkModeToggle = document.getElementById("dark-mode-toggle");
  const html = document.documentElement;
  const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");
  
  // Function to apply theme
  function applyTheme(theme) {
    if (theme === "dark") {
      html.classList.add("dark");
    } else {
      html.classList.remove("dark");
    }
  }
  
  // Function to get current theme preference
  function getThemePreference() {
    const savedTheme = localStorage.getItem("theme");
    if (savedTheme) {
      return savedTheme;
    }
    // Default to system preference
    return mediaQuery.matches ? "dark" : "light";
  }
  
  // Apply initial theme
  const currentTheme = getThemePreference();
  applyTheme(currentTheme);
  
  // Save initial theme if not already saved
  if (!localStorage.getItem("theme")) {
    localStorage.setItem("theme", currentTheme);
  }
  
  // Listen for system theme changes (when user hasn't manually set a preference)
  mediaQuery.addEventListener("change", function(e) {
    // Only auto-switch if user hasn't manually set a preference
    if (!localStorage.getItem("theme") || localStorage.getItem("theme") === "system") {
      const newTheme = e.matches ? "dark" : "light";
      applyTheme(newTheme);
      localStorage.setItem("theme", newTheme);
    }
  });
  
  // Toggle button functionality
  if (darkModeToggle) {
    darkModeToggle.addEventListener("click", function () {
      const isDark = html.classList.contains("dark");
      const newTheme = isDark ? "light" : "dark";
      applyTheme(newTheme);
      localStorage.setItem("theme", newTheme);
    });
  }
</script>
